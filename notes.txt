* Internet
- The internet is a global network of computers where each computer/router has
an IP address to uniquely identify them, just like a home address. 
- IP addresses are assigned to you by your internet service provider, e.g. 
73.158.6.61.
- Even if you have multiple devices in your home, each of these devices all have 
a private IP address that is only local to your home network. 
- Your router has a public IP address and that's the address the internet 
actually sees. All the private ones for each device are only within your home 
network or office network. 
- The way computers talk to eachother is over the TCP/IP protocol. A protocol 
is a way for computers to communicate.
- HTTP is an application layer protocol, which runs over TCP, that is responsible
for handling web traffic between a browser and a web server. 
- Other application layer protocols include SMTP which deals with emails, FTP 
and SSH deal with transferring files over the internet.
- Websites/webpages are files stored on computers that run a piece of software
called a web server. 
- You can build a website on your local machine and then you would upload it to 
a server that a hosting company owns. 
- Domain names can be purchased from registrars and linked to your hosting 
account/web server. 
- When you type in 'http://www.facebook.com' there's something called a DNS
or domain name service that maps that domain to the correct IP address of 
facebook.com. 

* Process of Loading a Webpage 
1. User types in 'google.com' into a web browser
2. DNS server looks at the domain name and maps it to the IP address that's 
needed, e.g. 192.168.1.4.
3. Once it gets that IP address, it then makes a HTTP request to the web server
of that IP address. 
4. That web server will return a response with the HTML/CSS files needed for
google.com to be loaded in the user's browser. 
- HTTP requests are made when you load a webpage and when you submit a form. 

* HTML
- Hypertext Markup Language is not a programming language. 
- It is purely visual and is a markup for creating webpages/documents. 

- when you have a homepage of a website, you have to call it "index.html"
because when you go to "___.com", it's going to look for that file as the 
homepage. 

* CSS
- Stylesheet language used for styling HTML elements.
- Can be extended with Sass/Less. 

 * Roles of Web Technologies
 - HTML: content display/structure
 - CSS: style and design
 - JS: dynamic front end programming
 - PHP, Python, C#, JS: backend programming
 - MySQL, MongoDB: database/storage

* CSS Colors
- best black background replacement is #333
- best white background replacement is #f4f4f4

* Backgrounds and Borders
- jpg files cannot be transparent, but png files can be.

- floats are not useful anymore because they are a pain with responsive
design and dealing with mobile devices.

- link:visited and active are not useful 

- can't do margin: auto on an inline element
- cannot use width on an inline element 
- inline-block allows us to add width on inline elements
- box sizing: border box let's us use the width we specify

* Position Values
- static: not effected by top, bottom, left, right properties/values
- relative: tblr values cause element to be moved from its normal
position 
- absolute: positioned relative to its parent element that it is 
positioned "relative" 
- fixed: positioned relative to the viewport
- sticky: positioned based on scroll position 
- z index property let's you put elements in front or behind one
another; the higher the z index, the more closer it is to you 
- positioning isn't used that much in modern websites/UIs because
of responsiveness with mobile devices

- visibility: hidden is like display: none except it doesn't take
it out of the document
- !important flag overrides CSS rules 
- avoid using negative margin values 

- you can have multiple footer tags, e.g. the bottom of an article 

- to change the color of a selected input field, use :focus then 
outline: none and border-color

* Responsive Design 
- set the viewport/scale
- use fluid widths as opposed to fixed
- media queries
- rem units over px
- mobile first method

- when you do mobile first design, usually you'll put base styling 
for mobile then use min-width media queries for larger screens 

- using em for padding will point to the element's font size, not
its parent element, so em is not useful
- rem is used because it looks at the root html element
- making the html tag's font size 10px is common because rem is 
easy to use; 2rem on 10px is 20px
- vw is rarely used
- vh is great for landing pages because as soon as you scroll down, 
you will see the content below the image

* Flexbox
- replaces floats and is better to work with 
- all direct child elements are flex items
- main axis is left to right, cross axis is up to down
- justify content: align horizontal
- align items: align vertical 
- align content: align when extra space is cross axis 
- flex direction column changes the main axis up to down 

* Icon Next to Website Title
- to change png file into ico file, go to dynamic drive favicon generator
- choose file then create icon, then move icon to root and not images 
- copy the link tag and put it above stylesheet link tags
- to reload the cache, on mac use 'shift cmd r'
- if doesn't show up, make sure href is correct 

* Types of Web Hosting 
- Shared hosting: one account of many on a server, used for small websites 
- Virtual private server hosting: can create multiple shared accounts, great 
if you have more than one website 
- Dedicated server: your own actual server, you rent out a physical machine 
- Reseller hosting 
- Cloud hosting: multiple servers work together, great for large apps 
- Static hosting

- no need to use box shadows, they look early 2000's
- no need to use text shadows

- CSS variables can be used for primary, secondary, and light grey colors 

- when you animate something, you're taking a property that can be animated
such as width, position, color, opacity, etc. where you have midpoints. 

- transitions are similar to keyframe animations except they happen on an 
event

- transform:skew() is great for diagonal lines

- with a checkbox, you can style it when it is in a checked state
- rgba is useful for adding transparency to the color
- a stylesheet can use styles from a preceding stylesheet in the head

- overflow:hidden prevents scrollbars and includes all the content